# .github/workflows/release.yaml

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      sha256: ${{ steps.shasum.outputs.sha256 }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.2

      - name: Ensure pip is installed
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref}}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false

      - name: Pip Requirements file
        run: |
          sudo apt-get install python3-pip
          pip install pipenv requests
          pipenv install
          pipenv run pip freeze > requirements.txt
      
      - name: Gather Script info for setup
        id: list_scripts
        run: |
          chmod +x ./packaging/scriptsetup.py
          python packaging/scriptsetup.py > scripts.txt
          cat scripts.txt
          scripts=$(cat scripts.txt)
          echo "scripts=${scripts}" >> "$GITHUB_OUTPUT"

      - name: Template setup.py
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: templates/setup.py.j2
          output_file: setup.py
        env:
          SCRIPTS: ${{ steps.list_scripts.outputs.scripts }}

      - name: Upload setup.py
        uses: actions/upload-artifact@v4
        with:
          name: setup
          path: setup.py
          retention-days: 1
          
      # - name: Convert Requirements file to list output
      #   id: dependency_output
      #   run: |
      #     dep=$(sed 's/\(.*\)==\(.*\)/"\1==\2"/' requirements.txt | tr '\n' ',')
      #     echo "dep=${dep}" >> "$GITHUB_OUTPUT"
      
      # - name: Template pyproject.toml
      #   uses: cuchi/jinja2-action@v1.2.2
      #   with:
      #     template: templates/pyproject.toml.j2
      #     output_file: pyproject.toml
      #   env:
      #     DEPENDENCIES: ${{ steps.dependency_output.outputs.dep }}
      #     PACKAGE_VERSION: ${{ github.ref_name }}

      - name: Template setup.cfg
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: templates/setup.cfg.j2
          output_file: setup.cfg
        env:
          PACKAGE_VERSION: ${{ github.ref_name }}
      
      # - name: Upload pyproject.toml
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: py-project
      #     path: pyproject.toml
      #     retention-days: 1

      - name: Create resource file
        id: create_resource
        run: |
          chmod +x packaging/pypackage_convert.py
          python packaging/pypackage_convert.py > resources.json

      - name: Upload resources.json
        uses: actions/upload-artifact@v4
        with:
          name: brew-resources
          path: resources.json
          retention-days: 1
      
      - name: Package
        run: |
          python3 -m pip install --upgrade build
          python3 -m build
          cd dist
          mv tools-core-*.tar.gz tools-core-${{github.ref_name}}.tar.gz

      - name: SHAsum
        id: shasum
        run: |
          cd dist
          shasum -a 256 tools-core-*.tar.gz > shasum-package-release
          cat shasum-package-release|cut -c1-64
          shasum=$(cat shasum-package-release|cut -c1-64)
          echo "sha256=${shasum}" >> "$GITHUB_OUTPUT"

      - name: Upload tar to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true

  update-homebrew:
    name: Update Homebrew
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: brew-resources

      - name: Install Jinja2
        run: pip install jinja2-cli

      - name: Render Jinja2 template
        run: jinja2 templates/random-number.rb.j2 -o random-number.rb --format=json resources.json

      # - name: Jinja2
      #   uses: cuchi/jinja2-action@v1.2.2
      #   with:
      #     template: random-number.rb.j2
      #     output_file: random-number.rb
      #     data_file: resources.json
        # env:
        #   sha: ${{ needs.build.outputs.sha256 }}
        #   version: ${{ github.ref_name }}

      - name: Clone Homebrew
        env:
          SHA: ${{ needs.build.outputs.sha256 }}
        run: |
          git config --global user.email "michael@einreinhof.com"
          git config --global user.name "${{ github.actor }}"
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.HOMEBREW_DEPLOY_SSH }}'
          git clone git@github.com:alteredtech/homebrew-test-tap.git homebrew
          cd homebrew
          cat ../random-number.rb > Formula/random-number.rb
          cat <<EOF > tools/release.json
          {
            "version": "${{ github.ref_name }}",
            "sha256": "$SHA"
          }
          EOF
          git add tools/ Formula/random-number.rb
          git commit -m 'Another Tools release ${{ github.ref_name }}'
          git push